services:
  vmauth:
    image: victoriametrics/vmauth:latest
    container_name: vmauth
    volumes:
      - ./configs/vmauth-config.yml:/etc/vmauth/config.yml:ro
    environment:
      - VM_AUTH_USERNAME=${VM_AUTH_USERNAME}
      - VM_AUTH_PASSWORD=${VM_AUTH_PASSWORD}
    command:
      - "--auth.config=/etc/vmauth/config.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vmauth.rule=Host(`metrics.bobparsons.dev`)"
      - "traefik.http.routers.vmauth.entrypoints=https"
      - "traefik.http.routers.vmauth.tls.certresolver=letsencrypt"
      - "traefik.http.services.vmauth.loadbalancer.server.port=8427"
      - "traefik.docker.network=traefik"
    networks:
      - monitoring
      - traefik
    restart: unless-stopped
    depends_on:
      - victoriametrics

  victoriametrics:
    image: victoriametrics/victoria-metrics:latest
    container_name: victoriametrics
    ports:
      - "8428:8428"
    volumes:
      - ./configs/vm-scrape-config.yaml:/etc/victoria-metrics/scrape-config.yaml:ro
      - vm_data:/victoria-metrics-data
    command:
      - "-promscrape.config=/etc/victoria-metrics/scrape-config.yaml"
      - "-storageDataPath=/victoria-metrics-data"
      - "-httpListenAddr=:8428"
      - "-retentionPeriod=12" # 12 months retention
    networks:
      - monitoring
      - traefik
    restart: unless-stopped

  mcp-victoriametrics:
    image: ghcr.io/victoriametrics-community/mcp-victoriametrics:latest
    container_name: mcp-victoriametrics
    environment:
      # MCP_SERVER_MODE: Set to 'sse' for Server-Sent Events, or 'ws' for WebSockets.
      # SSE is generally simpler for dashboards.
      - MCP_SERVER_MODE=sse
      # VM_INSTANCE_ENTRYPOINT: This is crucial. Since 'victoriametrics' service
      # is on the same Docker network, use its service name and port.
      - VM_INSTANCE_ENTRYPOINT=http://victoriametrics:8428
      # VM_INSTANCE_TYPE: Set based on your VictoriaMetrics setup (single, cluster, etc.)
      - VM_INSTANCE_TYPE=single # or 'cluster' if you have a cluster setup
      # MCP_SERVER_BIND_ADDR: Port for MCP server to listen on inside the container.
      - MCP_SERVER_BIND_ADDR=:8080 # Default is usually 8080
      # Authentication credentials for VictoriaMetrics
      - VM_AUTH_USERNAME=${VM_AUTH_USERNAME}
      - VM_AUTH_PASSWORD=${VM_AUTH_PASSWORD}
      - VM_BEARER_TOKEN=${VM_BEARER_TOKEN}
    ports:
      # Map container port 8080 to host port (e.g., 8080 or another available port)
      - "8080:8080" # You can change the host port (e.g., "9090:8080")
    networks:
      - monitoring # Essential for communication with 'victoriametrics'
    restart: unless-stopped
    depends_on:
      - victoriametrics # Ensures VictoriaMetrics starts before MCP

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/host/var/log:ro
      - /home/server/monitoring/textfiles:/textfiles:ro
      - /var/lib/node_exporter/textfile_collector:/borgmatic:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
      - "--collector.textfile.directory=/textfiles"
      - "--collector.textfile.directory=/borgmatic"
      - "--web.listen-address=:9100"
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SERVER_DOMAIN=grafana.bobparsons.dev
      - GF_SERVER_ROOT_URL=https://grafana.bobparsons.dev
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SECURITY_ALLOW_EMBEDDING=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    dns:
      - 127.0.0.1
      - 8.8.8.8
      - 1.1.1.1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.bobparsons.dev`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik"
    networks:
      - monitoring
      - traefik
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    command:
      - "--housekeeping_interval=10s"
      - "--docker_only=true"
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge
  traefik:
    external: true

volumes:
  vm_data:
    driver: local
  grafana_data:
    driver: local
